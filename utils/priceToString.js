class PriceToString {
  numLetters (k, d) {
    let i = ''
    let e = [
      ['', 'тысяч', 'миллион', 'миллиард', 'триллион', 'квадриллион', 'квинтиллион', 'секстиллион', 'септиллион', 'октиллион', 'нониллион', 'дециллион'],
      ['а', 'и', ''],
      ['', 'а', 'ов']
    ]
    if (k === '' || k === '0') return ' ноль' // 0
    k = k.split(/(?=(?:\d{3})+$)/)
    if (k[0].length === 1) k[0] = '00' + k[0]
    if (k[0].length === 2) k[0] = '0' + k[0]
    for (var j = (k.length - 1); j >= 0; j--) {
      if (k[j] !== '000') {
        i = (((d && j === (k.length - 1)) || j === (k.length - 2)) && (String(k[j][2]) === '1' || String(k[j][2]) === '2') ? this.t(k[j], 1) : this.t(k[j])) + this.declOfNum(k[j], e[0][k.length - 1 - j], (j === (k.length - 2) ? e[1] : e[2])) + i
      }
    }
    return i
  }

  t (k, d) {
    var e = [
      ['', ' один', ' два', ' три', ' четыре', ' пять', ' шесть', ' семь', ' восемь', ' девять'],
      [' десять', ' одиннадцать', ' двенадцать', ' тринадцать', ' четырнадцать', ' пятнадцать', ' шестнадцать', ' семнадцать', ' восемнадцать', ' девятнадцать'],
      ['', '', ' двадцать', ' тридцать', ' сорок', ' пятьдесят', ' шестьдесят', ' семьдесят', ' восемьдесят', ' девяносто'],
      ['', ' сто', ' двести', ' триста', ' четыреста', ' пятьсот', ' шестьсот', ' семьсот', ' восемьсот', ' девятьсот'],
      ['', ' одна', ' две']
    ]
    return e[3][k[0]] + (Number(k[1]) === 1 ? e[1][k[2]] : e[2][k[1]] + (d ? e[4][k[2]] : e[0][k[2]]))
  }

  declOfNum (n, t, o) {
    let k = [2, 0, 1, 1, 1, 2, 2, 2, 2, 2]
    return (t === '' ? '' : ' ' + t + (n[n.length - 2] === '1' ? o[2] : o[k[n[n.length - 1]]]))
  }

  razUp (e) {
    return e[1].toUpperCase() + e.substring(2)
  }

  sumLetters (a) {
    a = Number(a).toFixed(2).split('.')
    return this.razUp(this.numLetters(a[0]) + this.declOfNum(a[0], 'рубл', ['ь', 'я', 'ей']) + ' ' + a[1] + this.declOfNum(a[1], 'копе', ['йка', 'йки', 'ек']))
  }
}

export let priceToString = new PriceToString()
